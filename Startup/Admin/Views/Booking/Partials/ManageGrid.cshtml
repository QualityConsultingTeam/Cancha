
@{
    Layout = null;
    var filter = (string)ViewBag.FilterModel;
    var sortOrder = (string)ViewBag.SortOrder;
    var currentColumnOrder = (string)ViewBag.CurrentColumnSort;

    var options = new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "BookingListSection", LoadingElementId = "loaderSection" };
}
@using PagedList.Mvc;
@model PagedList.IPagedList<Booking>

  <div class="table-responsive animated fadeInLeft">
    <table class="table table-striped">
        <thead>
            <tr>

                <th></th>
                @*<th>Hora </th>*@
                <th>

                @Ajax.ActionLink("Hora", "Sort", new { filterCounty = filter, columnName = "Start", sortOrder = sortOrder, currentColumn = currentColumnOrder },options)
                </th>
                @*<th>Cancha</th>*@
                <th>

                    @Ajax.ActionLink("Cancha", "Sort", new { filterCounty = filter, columnName = "Field", sortOrder = sortOrder, currentColumn = currentColumnOrder }, options)
                </th>
                <th>Cliente</th>
                <th>Info</th>
                <th>Estado</th>
                <th>Accion</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                
                <tr>
                    <td></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Start)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Field.Name)
                    </td>
                    <td>
                        <button class="btn btn-info btn-xs" onclick="ShowUserDetails('@item.User.Id')">
                            @item.User.Email
                        </button>
                    </td>
                    <td>
                        @item.Type
                    </td>
                    <td>
                        <span class="label label-primary">  @item.Status</span>
                    </td>

                    <td>
                        <div class="dropdown">
                            <button class="btn btn-default btn-xs dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                Cambiar Estado
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">


                                @if (item.Status == BookingStatus.Pendiente)
                                {
                                    <li> <a   onclick="UpdateStatus('@item.Id','@BookingStatus.Reservada')">Confirmar</a></li>
                                    <li><a onclick="UpdateStatus('@item.Id','@BookingStatus.Denegado')">Denegar</a></li>
                                }
                                else if (item.Status == BookingStatus.Reservada)
                                {
                                    <li><a onclick="UpdateStatus('@item.Id','@BookingStatus.Finalizado')">Finalizar</a></li>
                                    <li><a onclick="UpdateStatus('@item.Id','@BookingStatus.Denegado')">Cancelar</a></li>
                                    <li> <a onclick="UpdateStatus('@item.Id','@BookingStatus.Falta')">Falta</a></li>
                                }
                                else if (item.Status == BookingStatus.Finalizado || item.Status == BookingStatus.Cancelado)
                                {
                                    <li><a onclick="UpdateStatus('@item.Id','@BookingStatus.Reservada')">Confirmar</a></li>
                                }

                            </ul>
                        </div>
                    </td>

                </tr>
            }
            
        </tbody>
    </table>

    
</div> 
 <div class="form-inline animated flipInX">
    <div class="row">
        <div class="col-lg-12 text-right">
            <div class="pager-num">
                @Html.PagedListPager(Model, page => Url.Action("SearchBookings", new { filterdata = filter, page, columnName = currentColumnOrder, sortOrder }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "BookingListSection", LoadingElementId = "loaderSection" }))
            </div>
            <div class="pager-text">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
        </div>
    </div>
</div>