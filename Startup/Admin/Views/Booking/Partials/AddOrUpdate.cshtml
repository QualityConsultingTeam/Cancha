@model Access.Models.Booking
@using Admin.Models
@{
    ViewBag.Title = "EditBooking";
    if (Request.IsAjaxRequest()) { Layout = null; }
    
    var displaystart = Model.Start;

}


<script src="~/Scripts/typeahead.bundle.min.js"></script>
<script src="~/Scripts/typeahead.jquery.min.js"></script>
<script src="~/Scripts/typeahead.mvc.model.js"></script>



<div class="row animate fadeInLeft">
    <div class="col-lg-12">


        <div class="ibox-content">

            @using (Html.BeginForm("AddOrUpdate", "Booking",FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.CreateTime)
                @Html.HiddenFor(model => model.CreateDate)
                @Html.HiddenFor(model => model.OBJECTTYPE)
                @Html.HiddenFor(model => model.Id)

                @Html.HiddenFor(model => model.UserSign)
                @Html.HiddenFor(model => model.Team1)
                @Html.HiddenFor(model => model.Team2)

                @Html.HiddenFor(model => model.HasDownpay)

                @Html.HiddenFor(model => model.Start)
                @Html.HiddenFor(model => model.End)
                <div class="form-horizontal">

                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Start, new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            <strong>@displaystart.Value </strong>
                        </div>
                    </div>

                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Userid, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Userid)
                            @Html.AutocompleteFor(model => model.UserInfo.Name, model => model.Userid, "GetUserNames", "Account", true, "form-control")
                            @*@(Html.Kendo().ComboBoxFor(model => model.Userid)
                                            .HtmlAttributes(new { data_bind = "value:UserId", style = "width: 300px" })
                                            .DataTextField("Name")
                                            .DataValueField("Id")
                                            .Filter("contains")
                                            .AutoBind(false)
                                            .MinLength(3)
                                            //.Template("<span class='k-scheduler-mark' style='background-color:\\#= data.Color?Color:'' \\#'></span>\\#=Name\\#")
                                            .DataSource(source => source.Read(r => r.Action("GetUserNames", "Account")).ServerFiltering(true)))
                                @Html.ValidationMessageFor(model => model.Userid)*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Idcancha, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Idcancha, (IEnumerable<SelectListItem>)ViewBag.Fields,
                                   "Seleccione Cancha",new { @class = "form-control" })
                            @*@Html.AutocompleteFor(model => model.UserInfo.Comment, model => model.Idcancha, "GetUserNames", "Account", true, "form-control")*@
                            @*@(Html.Kendo().ComboBoxFor(model => model.Idcancha)
                                .HtmlAttributes(new { data_bind = "value:Idcancha", style = "width: 300px" })
                                .DataTextField("Name")
                                .DataValueField("Id")
                                //.OptionLabel("Cancha")
                                .ValuePrimitive(true)
                                    //.Template("<span class='k-scheduler-mark' style='background-color:\\#= data.Color?Color:'' \\#'></span>\\#=Name\\#")
                                   .DataSource(source => source.Read(r => r.Action("GetFieldsForAutoComplete", "Canchas"))))*@
                            @Html.ValidationMessageFor(model => model.Idcancha)
                        </div>
                    </div>
                   


                    <div class="form-group">
                        @Html.LabelFor(model => model.Invoice, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Invoice)
                            @Html.ValidationMessageFor(model => model.Invoice)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price)
                            @Html.ValidationMessageFor(model => model.Price)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DownPayment, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DownPayment)
                            @Html.ValidationMessageFor(model => model.DownPayment)
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.Pending, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Pending)
                            @Html.ValidationMessageFor(model => model.Pending)
                        </div>
                    </div>



                    <div class="modal-footer animated fadeInRightBig">


                        <button type="submit" class="btn btn-info btn-circle btn-lg btn-outline">
                            <i class="fa fa-check"></i>
                        </button>

                        <button id="closemodalbtn" class="btn btn-warning btn-circle btn-lg btn-outline" data-dismiss="modal" type="button">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>
            }


        </div>

    </div>
</div>


