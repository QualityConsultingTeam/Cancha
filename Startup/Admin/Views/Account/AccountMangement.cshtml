 
@{
    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
    var options = new AjaxOptions()
    {
        HttpMethod = "post",
        InsertionMode = InsertionMode.Replace,
        LoadingElementId = "loaderSection",
        UpdateTargetId = "userAdminSection"
    };
}
@model  List<Identity.IdentityUserViewModel>

@Scripts.Render("~/plugins/knockout")
 <div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-9">
        <h2> </h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Menu", "RootAdmin")">ADMINISTRACION </a>
            </li>
            <li>
                
            </li>
            <li class="active">
                <strong>USUARIOS </strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight" id="userAdminSection">
   
    <div class="row">
        <div class="col-lg-12">

            <div class="row">
                <h2>Usuarios</h2>
                <div class="">
                    @*@Html.ActionLink("Create New", "EditApplicationUser", null, new { @class = "btn btn-primary btn-xs" })*@
                    @Ajax.ActionLink(" ", "EditApplicationUser", null, options, new { @class = "btn btn-danger btn-circle btn-outline fa fa-plus" })
                </div>
            </div>
            <div class="ibox-content animated fadeInUpBig">
                <div class="row">
                    @using (Ajax.BeginForm("SearchAccounts", "Account", null, new AjaxOptions
                    {
                        HttpMethod = "post",
                        InsertionMode = InsertionMode.Replace,
                        LoadingElementId = "loaderSection",
                        UpdateTargetId = "tablecontaier"

                    }, new {id = "searchaccountsform"}))
                    {
                        if (User.IsInRole("Admin"))
                        {
                        <div class="col-sm-4 m-b-xs">
                            <select class="input-sm form-control input-s-sm inline" id="role" name="role" data-bind="
                                    options: roles,
                                    optionsText: 'Text',
                                    optionsValue: 'Text',event:{ change: onSelectionChange},
                                    optionsCaption: 'Seleccione Rol...' "></select>
                        </div>


                            <div class="col-sm-5 m-b-xs">
                                <select class="input-sm form-control input-s-sm inline" id="centerid" name="centerid" data-bind="
                                        options: centers,
                                        optionsText: 'Text',
                                        optionsValue: 'Id',event:{ change: onCenterChange},
                                        optionsCaption: 'Seleccione Centro...' "></select>
                            </div>
                        }
                        <input type="hidden" data-bind="value:Limit" name="Limit" id="Limit" />
                        <input type="hidden" data-bind="value:page" name="page" id="page" />
                        <div class="col-sm-3">
                            <div class="input-group">
                                <input type="text" placeholder="Usuario/Email" id="keywords" name="keywords" class="input-sm form-control"> <span class="input-group-btn">
                                    <button type="submit" class="btn btn-sm btn-primary"> Buscar!</button>
                                </span>
                            </div>
                        </div>
                        }

                </div>
                @*<div class="table-responsive" id="tablecontaier">
                        @Html.Partial(@"~/Views/Account/Partials/UserManagementGrid.cshtml", Model)
                    </div>*@
            </div>

        </div>
    </div>
    <div class="row" id="tablecontaier">
        @Html.Partial("Partials/UserManagementGrid", Model)

    </div>
    <div class="row">
        <div class="btn-group">
            <button type="button" class="btn btn-white" data-bind="click:previousPage">
                <i class="fa fa-chevron-left"></i>
            </button>
            @*<div data-bind="foreach:pages">
                    <button class="btn btn-white  active" data-bind="text: number"></button>
                </div>*@


            <button type="button" class="btn btn-white" data-bind="click:nextPage">
                <i class="fa fa-chevron-right"></i>
            </button>
        </div>
    </div>
</div>


<script>
    var pagelimit;
    var viewmodel = {
        roles: [],
        Limit: 8,
        page: ko.observable('1'), 
        onSelectionChange: function () {
            $("#page").val(0);
            doSearch();
        },
        onCenterChange: function () {
            $("#page").val(0);
            doSearch();
        },
        previousPage: function () {
            var pag = Number($("#page").val()) - 1;
            if (pag > 0) {
                $("#page").val(pag);
                doSearch();
                $("#page").val(pag);
            }
        },
        nextPage: function () {
            var pag = Number($("#page").val()) + 1;
            var limit = Number(pagelimit);
            console.log("page : " + pag + "pageLImit: " + limit)
            if (pag > 0 && pag <= limit) {
                $("#page").val(pag);
                doSearch();
            }
        },
    };
    // Initialize
    function doSearch() {
        $("#searchaccountsform").submit();
    }

    $(function () {
        $.get('@Url.Action("GetRoles", "Account")', function (data) {
            $.get('@Url.Action("GetCenters","Account")', function (centers) {
                applybindigs(data,centers);
            });
        });

    });
    function applybindigs(rolesfor,centers) {

        console.log("Try apply bindings");
        viewmodel.roles = rolesfor;
        viewmodel.centers = centers;
        ko.applyBindings(viewmodel);
    };
</script>