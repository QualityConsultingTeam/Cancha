@model Access.Models.Center

@{
    if (Model.Id == 0 && ViewBag.CompanyId != null)
    {
        Model.Idcompany =( int)ViewBag.CompanyId;
    }

    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
}

<div class="row wrapper border-bottom white-bg page-heading animated flipInX">
    <div class="col-lg-10">
        <h2>Administracion de Centros</h2>
        <ol class="breadcrumb">


            <li class="active">
                <strong>Centro</strong>
            </li>
            <li>
                <a href="@Url.Action("CenterEdit","RootAdmin")" class="btn btn-danger btn-circle btn-outline" type="button"
                   data-toggle="tooltip" data-placement="right" title="Tooltip on right">
                    <i class="fa fa-plus icon-white"></i>
                    @*Crear nueva cancha*@
                </a>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Editar Centro</h5>
                    </div>
                    <div class="ibox-content">
    
    				@using (Html.BeginForm("CenterEdit","RootAdmin",FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
    
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
    
            <div class="form-group">
                @Html.LabelFor(model => model.Idcompany, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Idcompany)
                    @Html.ValidationMessageFor(model => model.Idcompany)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Type)
                    @Html.ValidationMessageFor(model => model.Type)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location)
                    @Html.ValidationMessageFor(model => model.Location)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Town, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Town)
                    @Html.ValidationMessageFor(model => model.Town)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Department, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TypeaheadForAsync(model => model.Department, "GetCountries","RootAdmin")
                    @Html.ValidationMessageFor(model => model.Department)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country)
                    @Html.ValidationMessageFor(model => model.Country)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Neighborhood, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Neighborhood)
                    @Html.ValidationMessageFor(model => model.Neighborhood)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Administrator, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Administrator)
                    @Html.ValidationMessageFor(model => model.Administrator)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Personcontact, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Personcontact)
                    @Html.ValidationMessageFor(model => model.Personcontact)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Phone1, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone1)
                    @Html.ValidationMessageFor(model => model.Phone1)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Phone2, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone2)
                    @Html.ValidationMessageFor(model => model.Phone2)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Opentime, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Opentime)
                    @Html.ValidationMessageFor(model => model.Opentime)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Closetime, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Closetime)
                    @Html.ValidationMessageFor(model => model.Closetime)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.UserSign, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserSign)
                    @Html.ValidationMessageFor(model => model.UserSign)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.CreateDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreateDate)
                    @Html.ValidationMessageFor(model => model.CreateDate)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.CreateTime, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreateTime)
                    @Html.ValidationMessageFor(model => model.CreateTime)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.OBJECTTYPE, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OBJECTTYPE)
                    @Html.ValidationMessageFor(model => model.OBJECTTYPE)
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
    				@Html.ActionLink("Cancelar", "Centers", null, new { @class = "btn btn-white"})
                </div>
            </div>
        </div>
    }
    
    
                    </div>
                </div>
            </div>
        </div>
     </div>
    
 