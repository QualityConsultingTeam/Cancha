@model Access.Models.Center

@{
     
    if (Model.Id == 0 && ViewBag.CompanyId != null)
    {
        Model.Idcompany = (int)ViewBag.CompanyId;
    }

    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
  

}

    
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>CompanyCenterEdit Center</h5>
                </div>
                <div class="ibox-content">
    
                    @using (Ajax.BeginForm("CompanyCenterEdit",new AjaxOptions()
                    {
                        HttpMethod = "POST",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "centersincompany",
                        LoadingElementId = "loaderSection",
                    }))
                    {
                        @Html.AntiForgeryToken()
        
                        <div class="form-horizontal">
    
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.Id)
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Idcompany, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.Idcompany)
                                    @Html.ValidationMessageFor(model => model.Idcompany)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name)
                                    @Html.ValidationMessageFor(model => model.Name)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Type)
                                    @Html.ValidationMessageFor(model => model.Type)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Location)
                                    @Html.ValidationMessageFor(model => model.Location)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description)
                                    @Html.ValidationMessageFor(model => model.Description)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.EditorFor(model => model.Country)*@
                                    @(Html.Kendo().ComboBox()
                                .Name("Country")
                              .Placeholder("Seleccione Pais")
                               .HtmlAttributes(new { style = "width: 100%;;heigth:100%" })
                                                .Filter("contains")
                                                .DataTextField("text")
                                                .DataValueField("id")
                                                .DataSource(x =>
                                                    x.Read("GetCountries", "RootAdmin")).Value(Model.Country.ToString())
                                    )
                                    @Html.ValidationMessageFor(model => model.Country)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Department, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.EditorFor(model => model.Department)*@
                                    @(Html.Kendo().ComboBoxFor(model => model.Department)
                                          .Value(Model.Department.ToString())
                                          .HtmlAttributes(new { style = "width: 100%;heigth:100%", id = Html.IdFor(model => model.Department).ToString() })
                                          .Placeholder("Seleccione Departamento..")
                                          .DataTextField("text")
                                          .DataValueField("id")
                                          .Filter(FilterType.Contains)
                                          .DataSource(source => source.Read(read => read.Action("GetStates", "RootAdmin")
                                              .Data("filterStates"))
                                              .ServerFiltering(true))
                                          .Enable(true)
                                          .AutoBind(false)
                                          //.CascadeFrom("Country")
                                          .CascadeFrom(Html.IdFor(model => model.Country).ToString())
                                          )
                                    @Html.ValidationMessageFor(model => model.Department)
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Town, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.EditorFor(model => model.Town)*@
                                    @(Html.Kendo().ComboBoxFor(model => model.Town)
                                    .Name("Town")
                                   .HtmlAttributes(new { style = "width:100%;heigth:100%", id = Html.IdFor(model => model.Town).ToString() })
                                  .Placeholder("Seleccione una cuidad...")
                                  .DataTextField("text")
                                  .DataValueField("id")
                                  .Filter(FilterType.Contains)
                                     .DataSource(source => source.Read(read => read.Action("GetCities", "RootAdmin")
                            .Data("filtercities"))
                                      .ServerFiltering(true))
                                  .Enable(true)
                                  .AutoBind(false)
                                    .CascadeFrom("Department").Value(Model.Town.ToString()))
                                    @Html.ValidationMessageFor(model => model.Town)
                                </div>
                            </div>

    
                           
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Neighborhood, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Neighborhood)
                                    @Html.ValidationMessageFor(model => model.Neighborhood)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Administrator, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Administrator)
                                    @Html.ValidationMessageFor(model => model.Administrator)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Personcontact, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Personcontact)
                                    @Html.ValidationMessageFor(model => model.Personcontact)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone1, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Phone1)
                                    @Html.ValidationMessageFor(model => model.Phone1)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone2, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Phone2)
                                    @Html.ValidationMessageFor(model => model.Phone2)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email)
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Opentime, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Opentime)
                                    @Html.ValidationMessageFor(model => model.Opentime)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.Closetime, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Closetime)
                                    @Html.ValidationMessageFor(model => model.Closetime)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserSign, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserSign)
                                    @Html.ValidationMessageFor(model => model.UserSign)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.CreateDate, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CreateDate)
                                    @Html.ValidationMessageFor(model => model.CreateDate)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.CreateTime, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CreateTime)
                                    @Html.ValidationMessageFor(model => model.CreateTime)
                                </div>
                            </div>
    
                            <div class="form-group">
                                @Html.LabelFor(model => model.OBJECTTYPE, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OBJECTTYPE)
                                    @Html.ValidationMessageFor(model => model.OBJECTTYPE)
                                </div>
                            </div>
    
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                    <a href="#" onclick="clearCenterEditorForm()" class="btn btn-white">Cancelar</a>
                                    @*@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white"})*@
                                </div>
                            </div>
                        </div>
                    }
    
    
                </div>
            </div>
        </div>
    </div>
</div>


    
